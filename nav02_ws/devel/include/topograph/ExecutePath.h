// Generated by gencpp from file topograph/ExecutePath.msg
// DO NOT EDIT!


#ifndef TOPOGRAPH_MESSAGE_EXECUTEPATH_H
#define TOPOGRAPH_MESSAGE_EXECUTEPATH_H

#include <ros/service_traits.h>


#include <topograph/ExecutePathRequest.h>
#include <topograph/ExecutePathResponse.h>


namespace topograph
{

struct ExecutePath
{

typedef ExecutePathRequest Request;
typedef ExecutePathResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ExecutePath
} // namespace topograph


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::topograph::ExecutePath > {
  static const char* value()
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const ::topograph::ExecutePath&) { return value(); }
};

template<>
struct DataType< ::topograph::ExecutePath > {
  static const char* value()
  {
    return "topograph/ExecutePath";
  }

  static const char* value(const ::topograph::ExecutePath&) { return value(); }
};


// service_traits::MD5Sum< ::topograph::ExecutePathRequest> should match
// service_traits::MD5Sum< ::topograph::ExecutePath >
template<>
struct MD5Sum< ::topograph::ExecutePathRequest>
{
  static const char* value()
  {
    return MD5Sum< ::topograph::ExecutePath >::value();
  }
  static const char* value(const ::topograph::ExecutePathRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::topograph::ExecutePathRequest> should match
// service_traits::DataType< ::topograph::ExecutePath >
template<>
struct DataType< ::topograph::ExecutePathRequest>
{
  static const char* value()
  {
    return DataType< ::topograph::ExecutePath >::value();
  }
  static const char* value(const ::topograph::ExecutePathRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::topograph::ExecutePathResponse> should match
// service_traits::MD5Sum< ::topograph::ExecutePath >
template<>
struct MD5Sum< ::topograph::ExecutePathResponse>
{
  static const char* value()
  {
    return MD5Sum< ::topograph::ExecutePath >::value();
  }
  static const char* value(const ::topograph::ExecutePathResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::topograph::ExecutePathResponse> should match
// service_traits::DataType< ::topograph::ExecutePath >
template<>
struct DataType< ::topograph::ExecutePathResponse>
{
  static const char* value()
  {
    return DataType< ::topograph::ExecutePath >::value();
  }
  static const char* value(const ::topograph::ExecutePathResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TOPOGRAPH_MESSAGE_EXECUTEPATH_H
